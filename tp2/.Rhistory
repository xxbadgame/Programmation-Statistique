install.packages("readxl")
library(readxl)
df = readxl
data(readxl)
library(readxl)
data(dataset/pokemon.xlsx)
data(dataset/pokemon.xlsx)
library(readxl)
data(pokemon.xlsx)
library(readxl)
data(pokemon.xlsx)
library(readxl)
excel_sheets(pokemon.xlsx)
library(readxl)
library(readxl)
excel_sheets(pokemon.xlsx)
install.packages("tidyverse")
clear
readxl_example()
library("readxl")
read_excel(pokemon.xlsx)
library(readxl)
pokemon <- read_excel("pokemon.xlsx")
View(pokemon)
View(pokemon)
dim(pokemon)
View(pokemon)
View(pokemon)
library(readxl)
pokemon <- read_excel("pokemon.xlsx")
dim(pokemon)
library(readxl)
pokemon <- read_excel("pokemon.xlsx")
Dimesnions -> dim(pokemon)
Dimensions -> dim(pokemon)
Dimensions -> dim(pokemon)
dim(pokemon)
names(x = pokemon)
library(readxl)
pokemon <- read_excel("pokemon.xlsx")
# Les dimensions
Dismensions = dim(pokemon)
names(x = pokemon)
print(Dismensions)
AllTypes = str(object = pokemon)
Dismensions = dim(pokemon)
NomColumn = names(x = pokemon)
AllTypes = str(object = pokemon)
library(readxlsx)
library(readxl)
pokemon$generation
pokemon$is_legendary
pokemon$type
type.convert(pokemon$generation, factor())
class(pokemon$Dimensions) = "Factor"
library(readxl)
pokemon <- read_excel("pokemon.xlsx")
## Exercise 1
# Les dimensions
Dismensions = dim(pokemon)
NomColumn = names(x = pokemon)
AllTypes = str(object = pokemon)
class(pokemon$Dimensions) = "Factor"
AllTypes = pokemon$type
class(pokemon$Dimensions, na.rm=T) = "Factor"
class(pokemon$Dimensions, na.rm=T) = "Factor"
class(pokemon$generation, na.rm=T) = "Factor"
class(pokemon$generation, na.rm=T) = "Factor"
class(pokemon$generation) = "Factor"
class(pokemon$generation) = "Factor"
class(pokemon$is_legendary) = "Factor"
class(pokemon$type) = "Factor"
class(pokemon$generation) = "Factor"
class(pokemon$is_legendary) = "Factor"
class(pokemon$type) = "Factor"
class(pokemon$generation) = "Factor"
pokemon$generation <- class(pokemon$generation) = "Factor"
class(pokemon$generation) = "Factor"
class(pokemon$generation) = "Factor"
class(pokemon$is_legendary) = "Factor"
class(pokemon$type) = "Factor"
class(pokemon$generation) = "Factor"
library(readxl)
pokemon <- read_excel("pokemon.xlsx")
class(pokemon$generation) = "Factor"
class(pokemon$is_legendary) = "Factor"
class(pokemon$type) = "Factor"
Dismensions = dim(pokemon)
NomColumn = names(x = pokemon)
AllTypes = pokemon$type
pokemon$generation
str(pokemon$generation)
typeof(pokemon$generation)
type(pokemon$generation)
levels(pokemon$generation)
class(pokemon$generation)
class(pokemon$generation)
levels(pokemon$generation)
factor(pokemon$generation)
levels(pokemon$generation)
class(pokemon$generation)
class(pokemon$generation)
factor(pokemon$type)
levels(pokemon$generation)
factor(pokemon$generation)
factor(pokemon$is_legendary)
factor(pokemon$type)
levels(pokemon$generation)
levels(pokemon$is_legendary)
levels(pokemon$is_legendary)
levels(pokemon$type)
levels(pokemon$generation)
levels(pokemon$is_legendary)
levels(pokemon$type)
str(pokemon)
moyennePoids = mean(pokemon$weight_kg)
moyennePoids = mean(pokemon$weight_kg, na.rm = T)
mediannePoids = median(pokemon$weight_kg, na.rm = T)
quartileTailles = quantile(x = pokemon$height_kg, na.rm = T)
quartileTailles = quantile(x = pokemon$height_m, na.rm = T)
print(quartileTailles)
quartileTailles = quantile(x = pokemon$height_m, probs = 0.1, na.rm = T)
décilesTailles = quantile(x = pokemon$height_m, probs = 0.1, na.rm = T)
print(décilesTailles)
décilesTailles = quantile(x = pokemon$height_m, probs = c(0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9), na.rm = T)
print(décilesTailles)
variancePoids = var(pokemon$height_m)
variancePoids = var(pokemon$height_m, na.rm = T)
ecartTypePoids = sd(pokemon$height_m, na.rm = T)
variancePoids = var(x=pokemon$height_m, na.rm = T)
ecartTypePoids = sd(x=pokemon$height_m, na.rm = T)
variancePoids = var(x=pokemon$height_m, na.rm = T)
ecartTypePoids = sd(x=pokemon$height_m, na.rm = T)
table(x = pokemon)
table(x = pokemon$generation)
sort(table(x = pokemon$generation)
sort(table(x = pokemon$generation)
tab <- sort(table(x = pokemon$generation)
tab <- sort(table(x = pokemon$generation)
tab <- sort(table(x = pokemon$generation))
tab <- sort(table(x = pokemon$generation), decreasing = TRUE)
print(tab)
print(EffectifIs_Legendary)
EffectifIs_Legendary <- sort(table(x = pokemon$is_legendary), decreasing = TRUE)
print(EffectifIs_Legendary)
EffectifType <- sort(table(x = pokemon$type), decreasing = TRUE)
print(EffectifType)
requete_0 <- pokemon[,1:2]
dim(requete_0)
requete_1 <- pokemon[,"nom"]
print(requete_1)
requete_1 <- pokemon[,"nom" & "is_legendary"]
requete_1 <- pokemon[,"nom" & "is_legendary"]
requete_1 <- pokemon[,"nom":"is_legendary"]
requete_1 <- pokemon[,"nom":"is_legendary"]
requete_1 <- pokemon["is_legendary","nom"]
print(requete_1)
requete_1 <- pokemon[,"nom"]
print(requete_1)
requete_1 <- pokemon[,"nom"]
print(requete_1)
requete_1 <- pokemon[,c("nom", "is_legendary")]
print(requete_1)
dim(requete_1)
requete_2 <- pokemon[nrow(50),[1:2]]
requete_2 <- pokemon[,1:2]
requete_2 <- pokemon[nrow(50),1:2]
dim(requete_2)
requete_2 <- pokemon[nrow(x = 50),1:2]
dim(requete_2)
dim(requete_2, n = 50)
dim(requete_2)
requete_2 <- pokemon[50,1:2]
dim(requete_2)
requete_2 <- pokemon[pokemon[1:2]<50,1:2]
requete_2 <- pokemon[1:50,1:2]
dim(requete_2)
dim(requete_3)
requete_3 <- pokemon[1:10,]
dim(requete_3)
dim(requete_4)
requete_4 <- pokemon[,1:ncol(pokemon)-1]
dim(requete_4)
requete_5 <- data.frame(sort(pokemon$nom, decreasing = F))
requete_5
requete_5[1,]
requete_6 <- data.frame(sort(pokemon$weight_kg, decreasing = T))
requete_6[1,]
requete_7[10,c(pokemon$nom, pokemon$attack, pokemon$speed)]
requete_7 <- data.frame(sort(c(pokemon$attack,pokemon$speed), decreasing = F))
requete_7[10,c(pokemon$nom, pokemon$attack, pokemon$speed)]
levels(factor(pokemon$generation))
levels(factor(pokemon$is_legendary))
levels(factor(pokemon$is_legendary))
requete_7 <- pokemon[order(-pokemon$attack,pokemon$speed)]
requete_7[10,c(pokemon$nom, pokemon$attack, pokemon$speed)]
requete_7 <- pokemon[order(-pokemon$attack,pokemon$speed),]
requete_7 <- pokemon[order(-pokemon$attack,pokemon$speed),]
requete_7[10,c(pokemon$nom, pokemon$attack, pokemon$speed)]
requete_7[10,]
requete_7[10,]
requete_7[1:10,]
requete_40 <- pokemon[ pokemon$type == "fire", c("nom","type")]
dim(requete_40)
dim(requete_6[1,])
requete_40 <- pokemon[ pokemon$type == "fire", c("nom","type")]
dim(requete_40)
requete_41 <- pokemon[pokemon$attack > 150,]
requete_40
requete_41
requete_41 <- pokemon[pokemon$attack > 150,]
requete_41
requete_41 <- sort(pokemon[pokemon$attack >= 150,],decreasing = T)
requete_41
requete_41 <- sort(data.frame(pokemon[pokemon$attack >= 150,],decreasing = T))
requete_41 <- sort(data.frame(pokemon[pokemon$attack >= 150,],decreasing = T))
filtre <- sort(pokemon[pokemon$attack >= 150,],decreasing = T)
filtre <- pokemon[pokemon$attack >= 150,]
requete_41 = filtre[order(-filtre.attack)]
requete_41 = filtre[order(-filtre.attack),]
filtre <- pokemon[pokemon$attack >= 150,c("nom","attack")]
requete_41 = filtre[order(-filtre.attack),]
filtre <- pokemon[pokemon$attack >= 150,c("nom","attack")]
requete_41 = filtre[order(-filtre$attack),]
requete_41
requete_50 <- aggregate(x = speed ~ generation, data = pokemon , FUN = mean)
dim(requete_0)
requete_50 <- aggregate(x = speed ~ generation, data = pokemon , FUN = mean)
dim(requete_50)
requete_50 <- aggregate(x = speed ~ generation, data = pokemon , FUN = mean)
requete_50
dim(requete_50)
?aggregate
requete_51 <- aggregate(x = speed ~ type, data = pokemon , FUN = mean)
requete_51
dim(requete_51)
MoyTypeAttack
MoyTypeAttack <- aggregate(x = speed ~ type, data = pokemon , FUN = mean)
MoyTypeAttack
requete_51 <- MoyTypeAttack[order(-MoyTypeAttack$speed)]
MoyTypeAttack <- aggregate(x = speed ~ type, data = pokemon , FUN = mean)
requete_51 <- MoyTypeAttack[order(-MoyTypeAttack$speed),]
requete_51
MoyTypeAttack <- aggregate(x = speed ~ type, data = pokemon , FUN = mean)
filtre <- MoyTypeAttack[order(-MoyTypeAttack$speed),]
filtre[1:3,]
MoyTypeAttack <- aggregate(x = speed ~ type, data = pokemon , FUN = mean)
filtre <- MoyTypeAttack[order(-MoyTypeAttack$speed),]
requete_51 = filtre[1:3,]
requete_51
NbPokType <- aggregate(x = type, data = pokemon , FUN = sum)
NbPokType <- pokemon[sum(pokemon$type)]
requete_52 <- aggregate(x = nom ~ type, data = pokemon , FUN = sum( ))
requete_52 <- aggregate(x = nom ~ type, data = pokemon , FUN = sum)
requete_50 <- aggregate(x = speed ~ generation, data = pokemon , FUN = mean)
requete_52 <- aggregate(x = nom ~ type, data = pokemon , FUN = sum)
requete_52 <- aggregate(x = pokedex_number ~ type, data = pokemon , FUN = sum)
requete_52
dim(requete_52)
requete_52 <- aggregate(x = pokedex_number ~ type, data = pokemon , FUN = count)
requete_52 <- aggregate(x = pokedex_number ~ type, data = pokemon)
requete_52 <- aggregate(x = pokedex_number ~ type, data = pokemon)
requete_52 <- aggregate(x = pokedex_number ~ type, data = pokemon, FUN = mean)
requete_52
dim(requete_52)
requete_52 <- aggregate(x = pokedex_number ~ type, data = pokemon, FUN = length)
requete_52
dim(requete_52)
requete_53 <- aggregate(x = weight_kg ~ type, data = pokemon, FUN = median)
requete_53
dim(requete_53)
requete_54 <- aggregate(x = pokedex_number ~ type & pokedex_number ~ generation, data = pokemon, FUN = median)
requete_54 <- aggregate(x = pokedex_number ~ type & generation, data = pokemon, FUN = median)
requete_54 <- aggregate(x = pokedex_number ~ type, data = pokemon, FUN = median)
requete_54 <- aggregate(x = pokedex_number ~ type, data = pokemon, FUN = median)
requete_54
dim(requete_54)
partype <- aggregate(x = pokedex_number ~ type, data = pokemon, FUN = median)
partype <- aggregate(x = pokedex_number ~ type, data = pokemon, FUN = length)
requete_54 <- aggregate(x= pokedex_number ~ generation, data = partype, FUN = length)
requete_54 <- aggregate(x= pokedex_number ~ type, data = partype, FUN = length)
partype <- aggregate(x = pokedex_number ~ type, data = pokemon, FUN = length)
requete_54 <- aggregate(x= pokedex_number ~ type, data = partype, FUN = length)
requete_54
dim(requete_54)
requete_54 <- aggregate(x= partype ~ generation, data = pokemon, FUN = length)
partype <- aggregate(x = pokedex_number ~ type + generation, data = pokemon, FUN = length)
requete_54
partype <- aggregate(x = pokedex_number ~ type + generation, data = pokemon, FUN = length)
requete_54
dim(requete_54)
partype <- aggregate(x = pokedex_number ~ type + generation, data = pokemon, FUN = length)
requete_54
dim(requete_54)
partype <- aggregate(x = pokedex_number ~ type, data = pokemon, FUN = length)
requete_54 <- aggregate(x = pokedex_number ~ type, data = pokemon, FUN = length)
requete_54
dim(requete_54)
requete_54 <- aggregate(x = pokedex_number ~ type + generation, data = pokemon, FUN = length)
requete_54
dim(requete_54)
requete_55 <- aggregate(x = weight_kg + height_m + attack + defense + speed ~ type, data = pokemon , FUN = mean)
requete_55
requete_55 <- aggregate(x = weight_kg + height_m + attack + defense + speed ~ type, data = pokemon , FUN = mean)
requete_55
dim(requete_55)
